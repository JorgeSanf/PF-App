import { AppShell, Navbar, Header } from "@mantine/core";

function App() {
  return (
    <AppShell
      padding="md"
      navbar={
        <Navbar width={{ base: 300 }} height={500} p="xs">
          {/* Navbar content */}
        </Navbar>
      }
      header={
        <Header height={60} p="xs">
          {/* Header content */}
        </Header>
      }
      styles={(theme) => ({
        main: {
          backgroundColor:
            theme.colorScheme === "dark"
              ? theme.colors.dark[8]
              : theme.colors.gray[0],
        },
      })}
    >
      {/* Your application here */}
    </AppShell>
  );
}

import { useState } from "react";
import { RichTextEditor } from "@mantine/rte";

const initialValue =
  "<p>Your initial <b>html value</b> or an empty string to init editor without value</p>";

function Demo() {
  const [value, onChange] = useState(initialValue);
  return <RichTextEditor value={value} onChange={onChange} />;
}

export async function getStaticPaths() {
  // Call an external API endpoint to get posts
  const res = await fetch("https://pf-api-sp.azurewebsites.net/docus/api");
  const documentos = await res.json();

  // Get the paths we want to pre-render based on posts
  const paths = documentos.map((doc: Doc) => ({
    params: { id: doc.id },
  }));

  // We'll pre-render only these paths at build time.
  // { fallback: false } means other routes should 404.
  return { paths, fallback: false };
}

export async function getStaticProps({ params }: any) {
  const req = await fetch(
    `https://pf-api-sp.azurewebsites.net/docus/api/id/${params.id}`
  );
  const data = await req.json();
  const fetchHtml = await fetch(data.enlace);
  const fHtml = await fetchHtml.text();
  const docu = { doc: data, html: fHtml };

  return {
    props: { docu },
  };
}

import { useSession, signIn, signOut } from "next-auth/react";

export default function Home() {
  const { data: session } = useSession();
  if (session) {
    return <>P치gina si hay sesi칩n</>;
  }
  return (
    <>
      P치gina si no hay sesi칩n
      <button onClick={() => signIn()}>Sign in</button>
    </>
  );
}

import { Container, TypographyStylesProvider } from "@mantine/core";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { Doc } from "../../types/Doc";

export default function Documento({ doc }: { doc: Doc }) {
  const router = useRouter();
  const { id } = router.query;
  const [html, setHtml] = useState<any>();

  useEffect(() => {
    const recuperarHTML = async () => {
      const resp = await fetch(doc.enlace);
      resp.text().then((text) => {
        setHtml(text);
      });
    };
    recuperarHTML();
  }, [id]);

  return ( );
}

export default function Documento({ doc }: { doc: Doc }) {
  const router = useRouter();
  const { id } = router.query;
  const [html, setHtml] = useState<any>();

  useEffect(() => {
    const recuperarHTML = async () => {
      const resp = await fetch(doc.enlace);
      resp.text().then((text) => {
        setHtml(text);
      });
    };
    recuperarHTML();
  }, [id]);

